<!--
    Copyright (c) 2016 Oleg Nenashev and other contributors

    Permission is hereby granted, free of charge, to any person obtaining a copy of this
    software and associated documentation files (the "Software"), to deal in the Software without
    restriction, including without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all copies or
    substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-->

<!--
 This is an example of a minimal Windows Service Wrapper configuration, which includes only mandatiory options.

 This configuration file should be placed near the WinSW executable, the name should be the same.
 E.g. for myapp.exe the configuration file name should be myapp.xml

 You can find more information about the configuration options here: https://github.com/kohsuke/winsw/blob/master/doc/xmlConfigFile.md
 Full example: https://github.com/kohsuke/winsw/blob/sample-config-file/examples/allOptions.xml
-->
<configuration>

    <!-- ID of the service. It should be unique accross the Windows system-->
    <id>CSDKMS</id>
    <!-- Display name of the service -->
    <name>CSDKMS</name>
    <!-- Service description -->
    <description>This service is used for CSDKMS</description>
    <env name="CSDKMS_HOME" value="%BASE%" />
    <!-- Path to the executable, which should be started -->
    <executable>java</executable>
    <!-- G1 GC -->

    <arguments>-server -Xms256m -Xmx512m -XX:+UseG1GC -XX:MaxGCPauseMillis=250 -XX:G1ReservePercent=20 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=c:/csdkms/tomcat_vm_logs/csdkms.hprof  -Dcom.sun.management.jmxremote.authenticate=false  -Dcom.sun.management.jmxremote.ssl=false -Dspring.datasource.tomcat.initialSize=50 -Dspring.datasource.tomcat.minIdle=50 -Dserver.tomcat.accept-count=600 -Dserver.tomcat.max-threads=600 -Dserver.tomcat.max-connections=1024 -Dserver.connection-timeout=30000 -Dspring.profiles.active=developer -jar "C:\csdkms\backend\CSDKMS-0.0.1.jar"</arguments>

    <!--arguments>-server -Xms256m -Xmx512m -XX:+UseG1GC -XX:MaxGCPauseMillis=250 -XX:G1ReservePercent=20 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=c:/csdkms/tomcat_vm_logs/csdkms.hprof  -Dcom.sun.management.jmxremote.authenticate=false  -Dcom.sun.management.jmxremote.ssl=false -Dspring.datasource.tomcat.initialSize=50 -Dspring.datasource.tomcat.minIdle=50 -Dserver.tomcat.accept-count=600 -Dserver.tomcat.max-threads=600 -Dserver.tomcat.max-connections=1024 -Dserver.connection-timeout=30000 -Dspring.profiles.active=developer -Dserver.port=80 -jar "C:\csdkms\backend\CSDKMS-0.0.1.jar"</arguments-->

    <logpath>%BASE%\logs</logpath>

    <log mode="roll-by-time">
        <sizeThreshold>20480</sizeThreshold>
        <pattern>yyyyMMdd</pattern>
        <autoRollAtTime>00:00:00</autoRollAtTime>
        <zipOlderThanNumDays>7</zipOlderThanNumDays>
        <zipOlderFormat>yyyyMM</zipOlderFormat>
        <!--
        <setting1/>
        <setting2/>
      -->
    </log>

</configuration>